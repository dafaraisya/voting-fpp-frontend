{"remainingRequest":"/home/dafa/voting-fpp-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dafa/voting-fpp-frontend/src/components/Timeline.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dafa/voting-fpp-frontend/src/components/Timeline.vue","mtime":1609158989493},{"path":"/home/dafa/voting-fpp-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dafa/voting-fpp-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dafa/voting-fpp-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dafa/voting-fpp-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWVsaW5lOiBbXSwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREYXkoZGF0ZSkgewogICAgICB2YXIgdG9kYXkgPSBuZXcgRGF0ZSgpOwogICAgICBkYXRlID0gbmV3IERhdGUoZGF0ZS5nZXRUaW1lKCkgKyB0b2RheS5nZXRUaW1lem9uZU9mZnNldCgpICogNjAgKiAxMDAwKTsKCiAgICAgIHZhciB0YWh1biA9IGRhdGUuZ2V0RnVsbFllYXIoKTsKICAgICAgdmFyIG1vbnRoID0gZGF0ZS5nZXRNb250aCgpOwogICAgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXRlKCk7CgogICAgICBzd2l0Y2ggKG1vbnRoKSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgbW9udGggPSAiSmFudWFyaSI7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIDE6CiAgICAgICAgICBtb250aCA9ICJGZWJydWFyaSI7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIDI6CiAgICAgICAgICBtb250aCA9ICJNYXJldCI7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIDM6CiAgICAgICAgICBtb250aCA9ICJBcHJpbCI7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBtb250aCA9ICJNZWkiOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSA1OgogICAgICAgICAgbW9udGggPSAiSnVuaSI7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlIDY6CiAgICAgICAgICBtb250aCA9ICJKdWxpIjsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgNzoKICAgICAgICAgIG1vbnRoID0gIkFndXN0dXMiOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSA4OgogICAgICAgICAgbW9udGggPSAiU2VwdGVtYmVyIjsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgOToKICAgICAgICAgIG1vbnRoID0gIk9rdG9iZXIiOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIG1vbnRoID0gIk5vdmVtYmVyIjsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgMTE6CiAgICAgICAgICBtb250aCA9ICJEZXNlbWJlciI7CiAgICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgZGF5ID0gZGF5ICsgIiAiICsgbW9udGggKyAiICIgKyB0YWh1bjsKCiAgICAgIHJldHVybiBkYXk7CiAgICB9LAogICAgZ2V0VGltZShkYXRlKSB7CiAgICAgIHZhciB0b2RheSA9IG5ldyBEYXRlKCk7CiAgICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlLmdldFRpbWUoKSArIHRvZGF5LmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MCAqIDEwMDApOwoKICAgICAgdmFyIGhvdXIgPSBkYXRlLmdldEhvdXJzKCk7CiAgICAgIHZhciBtaW51dGUgPSBkYXRlLmdldE1pbnV0ZXMoKTsKCiAgICAgIGlmIChob3VyIDwgMTApIGhvdXIgPSAiMCIgKyBob3VyOwoKICAgICAgaWYgKG1pbnV0ZSA8IDEwKSBtaW51dGUgPSAiMCIgKyBtaW51dGU7CgogICAgICB2YXIgdGltZSA9IGhvdXIgKyAiOiIgKyBtaW51dGU7CgogICAgICByZXR1cm4gdGltZTsKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgYXhpb3MKICAgICAgLmdldCgiaHR0cDovL3BlbWlyYS5mcHB1bmRpcC5jb206MzAwMC9hcGkvdjEvc2Vzc2lvbi9hbGwiKQogICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgcmVzLmRhdGEuZGF0YS5mb3JFYWNoKChldmVudCkgPT4gewogICAgICAgICAgdGhpcy50aW1lbGluZS5wdXNoKHsKICAgICAgICAgICAgbmFtZTogIlNlc2kgIiArIGV2ZW50Lm51bWJlciwKICAgICAgICAgICAgc3RhcnQ6IGV2ZW50LnN0YXJ0LAogICAgICAgICAgICBlbmQ6IGV2ZW50LmVuZCwKICAgICAgICAgICAgcGFydGljaXBhbnQ6IGV2ZW50LnRvdGFsX3BhcnRpY2lwYW50LAogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0pCiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUubG9nKGVycm9yKSk7CiAgfSwKfTsK"},{"version":3,"sources":["Timeline.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Timeline.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1 class=\"text-white mt-4\">Timeline</h1>\n    <br />\n    <b-container\n      class=\"bg-white rounded shadow-sm mt-3 p-3 pl-5 pr-5 session\"\n      v-for=\"event in timeline\"\n      :key=\"event._id\"\n    >\n      <b-row>\n        <b-col lg=\"3\">\n          <b class=\"name\">{{ event.name }}</b>\n        </b-col>\n        <b-col lg=\"9\">\n          <div>\n            <b>Pembukaan: </b><br />\n            {{ getTime(new Date(event.start)) + \", \" + getDay(new Date(event.start)) }}\n          </div>\n          <div>\n            <b>Penutupan: </b><br />\n            {{ getTime(new Date(event.end)) + \", \" + getDay(new Date(event.end)) }}\n          </div>\n          <div>\n            <b>Jumlah peserta: </b><br />\n            {{ event.participant + \" orang\" }}\n          </div>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      timeline: [],\n    };\n  },\n  methods: {\n    getDay(date) {\n      var today = new Date();\n      date = new Date(date.getTime() + today.getTimezoneOffset() * 60 * 1000);\n\n      var tahun = date.getFullYear();\n      var month = date.getMonth();\n      var day = date.getDate();\n\n      switch (month) {\n        case 0:\n          month = \"Januari\";\n          break;\n        case 1:\n          month = \"Februari\";\n          break;\n        case 2:\n          month = \"Maret\";\n          break;\n        case 3:\n          month = \"April\";\n          break;\n        case 4:\n          month = \"Mei\";\n          break;\n        case 5:\n          month = \"Juni\";\n          break;\n        case 6:\n          month = \"Juli\";\n          break;\n        case 7:\n          month = \"Agustus\";\n          break;\n        case 8:\n          month = \"September\";\n          break;\n        case 9:\n          month = \"Oktober\";\n          break;\n        case 10:\n          month = \"November\";\n          break;\n        case 11:\n          month = \"Desember\";\n          break;\n      }\n\n      day = day + \" \" + month + \" \" + tahun;\n\n      return day;\n    },\n    getTime(date) {\n      var today = new Date();\n      date = new Date(date.getTime() + today.getTimezoneOffset() * 60 * 1000);\n\n      var hour = date.getHours();\n      var minute = date.getMinutes();\n\n      if (hour < 10) hour = \"0\" + hour;\n\n      if (minute < 10) minute = \"0\" + minute;\n\n      var time = hour + \":\" + minute;\n\n      return time;\n    },\n  },\n  mounted() {\n    axios\n      .get(\"http://pemira.fppundip.com:3000/api/v1/session/all\")\n      .then((res) => {\n        res.data.data.forEach((event) => {\n          this.timeline.push({\n            name: \"Sesi \" + event.number,\n            start: event.start,\n            end: event.end,\n            participant: event.total_participant,\n          });\n        });\n      })\n      .catch((error) => console.log(error));\n  },\n};\n</script>\n<style scoped>\n.session {\n  max-width: 700px;\n}\n.session .name {\n  font-size: 32px;\n}\n.session br {\n  display: none;\n}\n@media only screen and (max-width: 767px) {\n  .session {\n    max-width: 320px;\n  }\n  .session br {\n    display: block;\n  }\n}\n</style>\n"]}]}