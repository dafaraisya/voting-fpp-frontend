{"remainingRequest":"/home/dafa/voting-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/dafa/voting-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dafa/voting-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dafa/voting-frontend/src/views/admin/setting/EditSetting.vue?vue&type=template&id=68b4949d&","dependencies":[{"path":"/home/dafa/voting-frontend/src/views/admin/setting/EditSetting.vue","mtime":1606890956952},{"path":"/home/dafa/voting-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dafa/voting-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/dafa/voting-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dafa/voting-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}