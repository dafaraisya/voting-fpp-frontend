{"remainingRequest":"/home/dafa/voting-fpp-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dafa/voting-fpp-frontend/src/views/vote/Scan.vue?vue&type=style&index=0&id=4324f0f8&scoped=true&lang=css&","dependencies":[{"path":"/home/dafa/voting-fpp-frontend/src/views/vote/Scan.vue","mtime":1609147625285},{"path":"/home/dafa/voting-fpp-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dafa/voting-fpp-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dafa/voting-fpp-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dafa/voting-fpp-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dafa/voting-fpp-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50aXR0bGUsIGgxIHsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgoucGFnZSB7CiAgbWFyZ2luLXRvcDoxMDBweDsKfQoKLnNjYW5uZXItY2FyZCB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIG1hcmdpbi1sZWZ0OiBhdXRvOwogICAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogICAgbWF4LXdpZHRoOiAxMDAwcHg7Cn0KLmFsZXJ0IHsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87CiAgICBtYXgtd2lkdGg6IDUwMHB4Owp9Ci5sb2FkaW5nLWluZGljYXRvciB7CiAgZm9udC1zaXplOiAyMHB4IDsKICBmb250LXdlaWdodDogYm9sZDsKICBkaXNwbGF5OiBibG9jazsKICBtYXJnaW4tbGVmdDogYXV0bzsKICBtYXJnaW4tcmlnaHQ6IGF1dG87CiAgbWFyZ2luLXRvcDogMTAwcHggOwogIHdpZHRoOiAxMDBweDsKfQoKQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMjAwcHgpIGFuZCAobWF4LXdpZHRoOiAxOTIwcHgpewogICAgLnNjYW5uZXItY2FyZC1ib2R5IHsKICAgICAgICBtYXJnaW4tdG9wOiAxMDBweDsKICAgIH0KfQpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7CiAgICAuc2Nhbm5lci1jYXJkLWJvZHkgewogICAgICAgIG1hcmdpbi10b3A6IDEwcHg7CiAgICB9CiAgICAuc2Nhbm5lci1jYXJkIHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwogICAgfQp9Cg=="},{"version":3,"sources":["Scan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Scan.vue","sourceRoot":"src/views/vote","sourcesContent":["<template>\n  <div class=\"scan page pt-5\">\n      <img src=\"\" alt=\"\">\n      <h1 class=\"text-white tittle\">Scan kartu</h1>\n\n      <div class=\"scanner-card mt-5\">\n        <b-row>\n          <b-col lg=\"3\"/>\n          <b-col lg=\"6\">\n            <b-container class=\"bg-white p-3 rounded-sm shadow-sm\">\n              <qrcode-stream @init=\"onInit\" @decode=\"onDecode\">\n                <div class=\"loading-indicator\" v-if=\"loading\">\n                  Loading...\n                </div>\n              </qrcode-stream>\n            </b-container>\n          </b-col>\n        </b-row>\n      </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { QrcodeStream } from 'vue-qrcode-reader'\nimport Swal from 'sweetalert2'\n\nexport default {\n  name: 'Scan',\n  components: {\n    QrcodeStream\n  },\n  data() {\n    return {\n      dataParticipant : {\n        name: '',\n        nim: '',\n        email: ''\n      },\n      id : '',\n      loading : false\n    }\n  },\n  methods:{\n    async onInit (promise) {\n      this.loading = true\n\n      try {\n        await promise\n      } catch (error) {\n        console.error(error)\n      } finally {\n        this.loading = false\n      }\n    },\n    onDecode (decodedString) {\n      this.id = decodedString;\n      axios\n        .get(\"http://pemira.fppundip.com:3000/api/v1/participant/\"+this.id)\n        .then(res => {\n          this.dataParticipant = res.data.data;\n          this.check();\n        })\n        .catch(err => {console.log(err)});\n    },\n    check() {\n      // cek data partisipan ada enggak\n      if(this.dataParticipant == null) {\n        this.$router.push({ name: \"Error\", params: {error : 'failed-not-found'}});\n      } else {\n        // cek apakah sudah vote apa belum\n        var dataParticipantString = JSON.parse(JSON.stringify(this.dataParticipant));\n        if(Object.prototype.hasOwnProperty.call(dataParticipantString, 'voting')) {\n          this.$router.push({ name: \"Error\", params: {error : 'failed-already-vote'}});\n        } else {\n          // cek apakah sedang sesinya atau enggak\n          var today = new Date();\n          const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+('0' + today.getDate()).slice(-2);\n          const time = ('0' + today.getHours()).slice(-2) + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n          const dateTime = date +'T'+ time + '.000Z';\n          if(this.dataParticipant.session.min < dateTime && this.dataParticipant.session.max > dateTime) {\n            Swal.fire({\n                icon: 'success',\n                title: 'Autentikasi berhasil',\n                text: 'Selamat datang ' + this.dataParticipant.name,\n                showConfirmButton: true\n            }).then(()=>{\n              this.$store.commit(\"setAuthentication\", true);\n              this.$router.replace({ name: \"Voting\", params : {id:this.dataParticipant._id}, query: {'success': true} });\n            })\n          } else {\n            this.$router.push({ name: \"Error\", params: {error : 'failed-not-your-session'}});\n          }\n        }\n      }\n    }\n  },\n  mounted() {\n    axios\n      .get(\"http://pemira.fppundip.com:3000/api/v1/participant/all\")\n      .then(res => (this.dataParticipants = res.data.data))\n      .catch(error => console.log(error))\n  }\n}\n</script>\n<style scoped>\n.tittle, h1 {\n    font-weight: bold;\n}\n\n.page {\n  margin-top:100px;\n}\n\n.scanner-card {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 1000px;\n}\n.alert {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 500px;\n}\n.loading-indicator {\n  font-size: 20px ;\n  font-weight: bold;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 100px ;\n  width: 100px;\n}\n\n@media only screen and (min-width: 1200px) and (max-width: 1920px){\n    .scanner-card-body {\n        margin-top: 100px;\n    }\n}\n@media only screen and (max-width: 767px) {\n    .scanner-card-body {\n        margin-top: 10px;\n    }\n    .scanner-card {\n        margin-bottom: 20px;\n    }\n}\n</style>\n"]}]}