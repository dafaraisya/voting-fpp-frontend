{"remainingRequest":"/home/dafa/voting-frontend/node_modules/babel-loader/lib/index.js!/home/dafa/voting-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dafa/voting-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dafa/voting-frontend/src/views/vote/Announcement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dafa/voting-frontend/src/views/vote/Announcement.vue","mtime":1606890956952},{"path":"/home/dafa/voting-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dafa/voting-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dafa/voting-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dafa/voting-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IENvdW50ZG93biBmcm9tICJAL2NvbXBvbmVudHMvQ291bnRkb3duIjsKaW1wb3J0IEhpZ2hjaGFydHMgZnJvbSAiaGlnaGNoYXJ0cyI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBDb3VudGRvd246IENvdW50ZG93bgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWVVcDogIiIsCiAgICAgIHBhcnRpY2lwYW50czogW10sCiAgICAgIGNhbmRpZGF0ZXM6IFtdLAogICAgICBhbm5vdW5jZW1lbnQ6IFtdLAogICAgICB5ZWFyOiAwLAogICAgICBtb250aDogMCwKICAgICAgZGF0ZTogMCwKICAgICAgaG91cjogMCwKICAgICAgbWludXRlOiAwLAogICAgICBhcnJDYW5kaWRhdGU6IFtdLAogICAgICBiYXJPcHRpb25zOiB7CiAgICAgICAgY2hhcnQ6IHsKICAgICAgICAgIHR5cGU6ICJiYXIiCiAgICAgICAgfSwKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogIkhhc2lsIFBlcmhpdHVuZ2FuIFN1YXJhIFBFTUlSQSBGTUlQQSBVTlMgMjAyMCIKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICBjYXRlZ29yaWVzOiBbIm9rZSIsICJva2UyIiwgIm9rZTMiXSwKICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIHRleHQ6IG51bGwKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHlBeGlzOiB7CiAgICAgICAgICBtaW46IDAsCiAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICB0ZXh0OiAiNDYvMTAwIHN1YXJhIiwKICAgICAgICAgICAgYWxpZ246ICJoaWdoIgogICAgICAgICAgfSwKICAgICAgICAgIGxhYmVsczogewogICAgICAgICAgICBvdmVyZmxvdzogImp1c3RpZnkiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB2YWx1ZVN1ZmZpeDogIiBzdWFyYSIKICAgICAgICB9LAogICAgICAgIHBsb3RPcHRpb25zOiB7CiAgICAgICAgICBiYXI6IHsKICAgICAgICAgICAgZGF0YUxhYmVsczogewogICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHNlcmllczogewogICAgICAgICAgICBhbmltYXRpb246IHsKICAgICAgICAgICAgICBkdXJhdGlvbjogMAogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIGxheW91dDogInZlcnRpY2FsIiwKICAgICAgICAgIGFsaWduOiAicmlnaHQiLAogICAgICAgICAgdmVydGljYWxBbGlnbjogInRvcCIsCiAgICAgICAgICB4OiAtNDAsCiAgICAgICAgICB5OiA4MCwKICAgICAgICAgIGZsb2F0aW5nOiB0cnVlLAogICAgICAgICAgYm9yZGVyV2lkdGg6IDEsCiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IEhpZ2hjaGFydHMuZGVmYXVsdE9wdGlvbnMubGVnZW5kLmJhY2tncm91bmRDb2xvciB8fCAiI0ZGRkZGRiIsCiAgICAgICAgICBzaGFkb3c6IHRydWUKICAgICAgICB9LAogICAgICAgIGNyZWRpdHM6IHsKICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAiUGVyb2xlaGFuIiwKICAgICAgICAgIGRhdGE6IFsxMDcsIDMxLCA2MzUsIDIwMywgMl0sCiAgICAgICAgICBjb2xvcjogIiM0QkI1NDMiLAogICAgICAgICAgc2hvd0luTGVnZW5kOiBmYWxzZQogICAgICAgIH1dCiAgICAgIH0sCiAgICAgIHBvc2l0aXZlQ2hhcnRDb2xvcnM6IHsKICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICIjMjBiZjBiIgogICAgICB9LAogICAgICBjaGFydE9wdGlvbnM6IHsKICAgICAgICBzY2FsZXM6IHsKICAgICAgICAgIHlBeGVzOiBbewogICAgICAgICAgICB0aWNrczogewogICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiBmYWxzZQogICAgICAgICAgICB9LAogICAgICAgICAgICBncmlkTGluZXM6IHsKICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH1dLAogICAgICAgICAgeEF4ZXM6IFt7CiAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgYmVnaW5BdFplcm86IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGdyaWRMaW5lczogewogICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlCiAgICAgICAgICAgIH0KICAgICAgICAgIH1dCiAgICAgICAgfSwKICAgICAgICByZXNwb25zaXZlOiB0cnVlLAogICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IHRydWUKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNoZWNrRW5kVGltZTogZnVuY3Rpb24gY2hlY2tFbmRUaW1lKCkgewogICAgICB2YXIgZW5kID0gbmV3IERhdGUodGhpcy55ZWFyLCB0aGlzLm1vbnRoIC0gMSwgdGhpcy5kYXRlLCB0aGlzLmhvdXIsIHRoaXMubWludXRlKTsKICAgICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgIHZhciBkaXN0YW5jZSA9IGVuZC5nZXRUaW1lKCkgLSBub3cuZ2V0VGltZSgpOwoKICAgICAgaWYgKGRpc3RhbmNlIDwgMCkgewogICAgICAgIHRoaXMudGltZVVwID0gdHJ1ZTsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2codGhpcy50aW1lVXApOwogICAgfSwKICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKCkgewogICAgICB2YXIgZm9ybWF0ID0gdGhpcy5hbm5vdW5jZW1lbnQuc3BsaXQoIi0iKTsKICAgICAgdGhpcy55ZWFyID0gcGFyc2VJbnQoZm9ybWF0WzBdKTsKICAgICAgdGhpcy5tb250aCA9IHBhcnNlSW50KGZvcm1hdFsxXSk7CiAgICAgIHZhciB0aW1lID0gZm9ybWF0WzJdLnNwbGl0KCJUIik7CiAgICAgIHRoaXMuZGF0ZSA9IHBhcnNlSW50KHRpbWVbMF0pOwogICAgICB2YXIgY2xvY2sgPSB0aW1lWzFdLnNwbGl0KCI6Iik7CiAgICAgIHRoaXMuaG91ciA9IHBhcnNlSW50KGNsb2NrWzBdKTsKICAgICAgdGhpcy5taW51dGUgPSBwYXJzZUludChjbG9ja1sxXSk7CiAgICB9LAogICAgZmluZENhbmRpZGF0ZUJ5SWQ6IGZ1bmN0aW9uIGZpbmRDYW5kaWRhdGVCeUlkKGlkKSB7CiAgICAgIHZhciBpID0gMDsKCiAgICAgIGZvciAoaSA9IDA7IGkgPCB0aGlzLmNhbmRpZGF0ZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAodGhpcy5jYW5kaWRhdGVzW2ldLl9pZCA9PSBpZCkgcmV0dXJuIGk7CiAgICAgIH0KICAgIH0sCiAgICBjb3VudDogZnVuY3Rpb24gY291bnQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgICAgdmFyIGVuZENvdW50ID0gbmV3IERhdGUoX3RoaXMuYW5ub3VuY2VtZW50KTsKICAgICAgICBlbmRDb3VudCA9IG5ldyBEYXRlKGVuZENvdW50LmdldFRpbWUoKSArIG5vdy5nZXRUaW1lem9uZU9mZnNldCgpICogNjAgKiAxMDAwKTsKICAgICAgICBub3cgPSBuZXcgRGF0ZShub3cuZ2V0VGltZSgpICsgKG5vdy5nZXRUaW1lem9uZU9mZnNldCgpICsgNDIwKSAqIDYwICogMTAwMCk7CiAgICAgICAgdmFyIG1heENvdW50ID0gKG5vdyAtIGVuZENvdW50KSAvIDEwMDA7CiAgICAgICAgbWF4Q291bnQgPSBNYXRoLmNlaWwobWF4Q291bnQpOwogICAgICAgIGlmIChtYXhDb3VudCA+IDApIF90aGlzLnRpbWVVcCA9IHRydWU7CiAgICAgICAgaWYgKG1heENvdW50ID4gX3RoaXMucGFydGljaXBhbnRzLmxlbmd0aCkgbWF4Q291bnQgPSBfdGhpcy5wYXJ0aWNpcGFudHMubGVuZ3RoOwogICAgICAgIHZhciB0b3RhbCA9IFtdOwoKICAgICAgICBfdGhpcy5jYW5kaWRhdGVzLmZvckVhY2goZnVuY3Rpb24gKGNhbmRpZGF0ZSkgewogICAgICAgICAgcmV0dXJuIHRvdGFsLnB1c2goewogICAgICAgICAgICBuYW1lOiBjYW5kaWRhdGUubmFtZSwKICAgICAgICAgICAgdG90YWw6IDAKICAgICAgICAgIH0pOwogICAgICAgIH0pOwoKICAgICAgICB2YXIgbiA9IDA7CgogICAgICAgIGZvciAobiA9IDA7IG4gPCBtYXhDb3VudDsgbisrKSB7CiAgICAgICAgICBpZiAoX3RoaXMucGFydGljaXBhbnRzW25dLnZvdGluZykgewogICAgICAgICAgICB2YXIgaW5kZXggPSBfdGhpcy5maW5kQ2FuZGlkYXRlQnlJZChfdGhpcy5wYXJ0aWNpcGFudHNbbl0udm90aW5nLmlkX2NhbmRpZGF0ZSk7CgogICAgICAgICAgICB0b3RhbFtpbmRleF0udG90YWwrKzsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIF90aGlzLmFyckNhbmRpZGF0ZSA9IHRvdGFsOwogICAgICAgIHZhciBuYW1lID0gW107CiAgICAgICAgdmFyIHZvdGUgPSBbXTsKICAgICAgICB0b3RhbC5mb3JFYWNoKGZ1bmN0aW9uIChjb3VudCkgewogICAgICAgICAgbmFtZS5wdXNoKGNvdW50Lm5hbWUpOwogICAgICAgICAgdm90ZS5wdXNoKGNvdW50LnRvdGFsKTsKICAgICAgICB9KTsKICAgICAgICBfdGhpcy5iYXJPcHRpb25zLnhBeGlzLmNhdGVnb3JpZXMgPSBuYW1lOwogICAgICAgIF90aGlzLmJhck9wdGlvbnMuc2VyaWVzWzBdLmRhdGEgPSB2b3RlOwogICAgICAgIF90aGlzLmJhck9wdGlvbnMueUF4aXMudGl0bGUudGV4dCA9IG1heENvdW50ICsgIi8iICsgX3RoaXMucGFydGljaXBhbnRzLmxlbmd0aCArICIgc3VhcmEiOwogICAgICB9LCAxMDAwKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICBheGlvcy5nZXQoImh0dHA6Ly81Mi4xNTIuMjI4LjEwNzozMDAwL2FwaS92MS9hbm5vdW5jZW1lbnQiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgX3RoaXMyLmFubm91bmNlbWVudCA9IHJlcy5kYXRhLmRhdGE7CgogICAgICBfdGhpczIuZm9ybWF0dGVyKCk7CgogICAgICBfdGhpczIuY2hlY2tFbmRUaW1lKCk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgIHJldHVybiBjb25zb2xlLmxvZyhlcnIpOwogICAgfSk7CiAgICBheGlvcy5nZXQoImh0dHA6Ly81Mi4xNTIuMjI4LjEwNzozMDAwL2FwaS92MS9wYXJ0aWNpcGFudC9hbGwiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgX3RoaXMyLnBhcnRpY2lwYW50cyA9IHJlcy5kYXRhLmRhdGE7CgogICAgICBfdGhpczIuY291bnQoKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycik7CiAgICB9KTsKICAgIGF4aW9zLmdldCgiaHR0cDovLzUyLjE1Mi4yMjguMTA3OjMwMDAvYXBpL3YxL2NhbmRpZGF0ZS9hbGwiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgX3RoaXMyLmNhbmRpZGF0ZXMgPSByZXMuZGF0YS5kYXRhOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyKTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["Announcement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA,EAHA;AAIA,MAAA,YAAA,EAAA,EAJA;AAKA,MAAA,IAAA,EAAA,CALA;AAMA,MAAA,KAAA,EAAA,CANA;AAOA,MAAA,IAAA,EAAA,CAPA;AAQA,MAAA,IAAA,EAAA,CARA;AASA,MAAA,MAAA,EAAA,CATA;AAUA,MAAA,YAAA,EAAA,EAVA;AAWA,MAAA,UAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAIA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SAJA;AAOA,QAAA,KAAA,EAAA;AACA,UAAA,UAAA,EAAA,CAAA,KAAA,EAAA,MAAA,EAAA,MAAA,CADA;AAEA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA;AAFA,SAPA;AAaA,QAAA,KAAA,EAAA;AACA,UAAA,GAAA,EAAA,CADA;AAEA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA,cADA;AAEA,YAAA,KAAA,EAAA;AAFA,WAFA;AAMA,UAAA,MAAA,EAAA;AACA,YAAA,QAAA,EAAA;AADA;AANA,SAbA;AAuBA,QAAA,OAAA,EAAA;AACA,UAAA,WAAA,EAAA;AADA,SAvBA;AA0BA,QAAA,WAAA,EAAA;AACA,UAAA,GAAA,EAAA;AACA,YAAA,UAAA,EAAA;AACA,cAAA,OAAA,EAAA;AADA;AADA,WADA;AAMA,UAAA,MAAA,EAAA;AACA,YAAA,SAAA,EAAA;AACA,cAAA,QAAA,EAAA;AADA;AADA;AANA,SA1BA;AAsCA,QAAA,MAAA,EAAA;AACA,UAAA,MAAA,EAAA,UADA;AAEA,UAAA,KAAA,EAAA,OAFA;AAGA,UAAA,aAAA,EAAA,KAHA;AAIA,UAAA,CAAA,EAAA,CAAA,EAJA;AAKA,UAAA,CAAA,EAAA,EALA;AAMA,UAAA,QAAA,EAAA,IANA;AAOA,UAAA,WAAA,EAAA,CAPA;AAQA,UAAA,eAAA,EACA,UAAA,CAAA,cAAA,CAAA,MAAA,CAAA,eAAA,IAAA,SATA;AAUA,UAAA,MAAA,EAAA;AAVA,SAtCA;AAkDA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA,SAlDA;AAqDA,QAAA,MAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA,WADA;AAEA,UAAA,IAAA,EAAA,CAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CAAA,CAFA;AAGA,UAAA,KAAA,EAAA,SAHA;AAIA,UAAA,YAAA,EAAA;AAJA,SADA;AArDA,OAXA;AAyEA,MAAA,mBAAA,EAAA;AACA,QAAA,eAAA,EAAA;AADA,OAzEA;AA4EA,MAAA,YAAA,EAAA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA,CACA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,WAAA,EAAA;AADA,aADA;AAIA,YAAA,SAAA,EAAA;AACA,cAAA,OAAA,EAAA;AADA;AAJA,WADA,CADA;AAWA,UAAA,KAAA,EAAA,CACA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,WAAA,EAAA;AADA,aADA;AAIA,YAAA,SAAA,EAAA;AACA,cAAA,OAAA,EAAA;AADA;AAJA,WADA;AAXA,SADA;AAuBA,QAAA,UAAA,EAAA,IAvBA;AAwBA,QAAA,mBAAA,EAAA;AAxBA;AA5EA,KAAA;AAuGA,GA5GA;AA6GA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,UAAA,GAAA,GAAA,IAAA,IAAA,CACA,KAAA,IADA,EAEA,KAAA,KAAA,GAAA,CAFA,EAGA,KAAA,IAHA,EAIA,KAAA,IAJA,EAKA,KAAA,MALA,CAAA;AAQA,UAAA,GAAA,GAAA,IAAA,IAAA,EAAA;AAEA,UAAA,QAAA,GAAA,GAAA,CAAA,OAAA,KAAA,GAAA,CAAA,OAAA,EAAA;;AACA,UAAA,QAAA,GAAA,CAAA,EAAA;AACA,aAAA,MAAA,GAAA,IAAA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA;AACA,KAjBA;AAkBA,IAAA,SAlBA,uBAkBA;AACA,UAAA,MAAA,GAAA,KAAA,YAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,WAAA,IAAA,GAAA,QAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AACA,WAAA,KAAA,GAAA,QAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,IAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,WAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,WAAA,IAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,WAAA,MAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,KA3BA;AA4BA,IAAA,iBA5BA,6BA4BA,EA5BA,EA4BA;AACA,UAAA,CAAA,GAAA,CAAA;;AACA,WAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,UAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,UAAA,CAAA,CAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,CAAA;AACA;AACA,KAjCA;AAkCA,IAAA,KAlCA,mBAkCA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,YAAA,GAAA,GAAA,IAAA,IAAA,EAAA;AAEA,YAAA,QAAA,GAAA,IAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA;AAEA,QAAA,QAAA,GAAA,IAAA,IAAA,CACA,QAAA,CAAA,OAAA,KAAA,GAAA,CAAA,iBAAA,KAAA,EAAA,GAAA,IADA,CAAA;AAGA,QAAA,GAAA,GAAA,IAAA,IAAA,CACA,GAAA,CAAA,OAAA,KAAA,CAAA,GAAA,CAAA,iBAAA,KAAA,GAAA,IAAA,EAAA,GAAA,IADA,CAAA;AAIA,YAAA,QAAA,GAAA,CAAA,GAAA,GAAA,QAAA,IAAA,IAAA;AACA,QAAA,QAAA,GAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA;AAEA,YAAA,QAAA,GAAA,CAAA,EAAA,KAAA,CAAA,MAAA,GAAA,IAAA;AAEA,YAAA,QAAA,GAAA,KAAA,CAAA,YAAA,CAAA,MAAA,EACA,QAAA,GAAA,KAAA,CAAA,YAAA,CAAA,MAAA;AAEA,YAAA,KAAA,GAAA,EAAA;;AACA,QAAA,KAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,SAAA;AAAA,iBACA,KAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA,SAAA,CAAA,IADA;AAEA,YAAA,KAAA,EAAA;AAFA,WAAA,CADA;AAAA,SAAA;;AAOA,YAAA,CAAA,GAAA,CAAA;;AAEA,aAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,QAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,KAAA,CAAA,YAAA,CAAA,CAAA,EAAA,MAAA,EAAA;AACA,gBAAA,KAAA,GAAA,KAAA,CAAA,iBAAA,CACA,KAAA,CAAA,YAAA,CAAA,CAAA,EAAA,MAAA,CAAA,YADA,CAAA;;AAGA,YAAA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA;AACA;AACA;;AAEA,QAAA,KAAA,CAAA,YAAA,GAAA,KAAA;AAEA,YAAA,IAAA,GAAA,EAAA;AACA,YAAA,IAAA,GAAA,EAAA;AAEA,QAAA,KAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,UAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA;AACA,UAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA;AACA,SAHA;AAKA,QAAA,KAAA,CAAA,UAAA,CAAA,KAAA,CAAA,UAAA,GAAA,IAAA;AACA,QAAA,KAAA,CAAA,UAAA,CAAA,MAAA,CAAA,CAAA,EAAA,IAAA,GAAA,IAAA;AACA,QAAA,KAAA,CAAA,UAAA,CAAA,KAAA,CAAA,KAAA,CAAA,IAAA,GACA,QAAA,GAAA,GAAA,GAAA,KAAA,CAAA,YAAA,CAAA,MAAA,GAAA,QADA;AAEA,OArDA,EAqDA,IArDA,CAAA;AAsDA;AAzFA,GA7GA;AAwMA,EAAA,OAxMA,qBAwMA;AAAA;;AACA,IAAA,KAAA,CACA,GADA,CACA,gDADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,MAAA,MAAA,CAAA,YAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;;AACA,MAAA,MAAA,CAAA,SAAA;;AACA,MAAA,MAAA,CAAA,YAAA;AACA,KANA,EAOA,KAPA,CAOA,UAAA,GAAA;AAAA,aAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,KAPA;AAQA,IAAA,KAAA,CACA,GADA,CACA,mDADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,MAAA,MAAA,CAAA,YAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;;AACA,MAAA,MAAA,CAAA,KAAA;AACA,KALA,EAMA,KANA,CAMA,UAAA,GAAA;AAAA,aAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,KANA;AAOA,IAAA,KAAA,CACA,GADA,CACA,iDADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,MAAA,MAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,KAJA,EAKA,KALA,CAKA,UAAA,GAAA;AAAA,aAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,KALA;AAMA;AA9NA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h1\n          style=\"margin-top: 50px;margin-bottom: 30px;\"\n          class=\"text-center text-white\"\n        >\n          Pengumuman Hasil Voting PEMIRA 2020\n        </h1>\n      </div>\n    </div>\n    <!-- bar chart -->\n    <div v-if=\"timeUp\">\n      <b-row>\n        <b-col lg=\"1\"></b-col>\n        <b-col lg=\"10\">\n          <b-card>\n            <b-row class=\"h2\">\n              <b-col>\n                <div class=\"row\" v-if=\"arrCandidate.length > 0\">\n                  <div class=\"col\">\n                    <highcharts :options=\"barOptions\" ref=\"chart\"></highcharts>\n                  </div>\n                </div>\n              </b-col>\n            </b-row>\n          </b-card>\n        </b-col>\n      </b-row>\n    </div>\n    <!-- countdown -->\n    <div v-else class=\"row mt-5\">\n      <div class=\"col countdown\">\n        <Countdown\n          :year=\"year\"\n          :month=\"month\"\n          :date=\"date\"\n          :hour=\"hour\"\n          :minute=\"minute\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Countdown from \"@/components/Countdown\";\nimport Highcharts from \"highcharts\";\n\nexport default {\n  components: {\n    Countdown,\n  },\n  data() {\n    return {\n      timeUp: \"\",\n      participants: [],\n      candidates: [],\n      announcement: [],\n      year: 0,\n      month: 0,\n      date: 0,\n      hour: 0,\n      minute: 0,\n      arrCandidate: [],\n      barOptions: {\n        chart: {\n          type: \"bar\",\n        },\n        title: {\n          text: \"Hasil Perhitungan Suara PEMIRA FMIPA UNS 2020\",\n        },\n        xAxis: {\n          categories: [\"oke\", \"oke2\", \"oke3\"],\n          title: {\n            text: null,\n          },\n        },\n        yAxis: {\n          min: 0,\n          title: {\n            text: \"46/100 suara\",\n            align: \"high\",\n          },\n          labels: {\n            overflow: \"justify\",\n          },\n        },\n        tooltip: {\n          valueSuffix: \" suara\",\n        },\n        plotOptions: {\n          bar: {\n            dataLabels: {\n              enabled: true,\n            },\n          },\n          series: {\n            animation: {\n              duration: 0,\n            },\n          },\n        },\n        legend: {\n          layout: \"vertical\",\n          align: \"right\",\n          verticalAlign: \"top\",\n          x: -40,\n          y: 80,\n          floating: true,\n          borderWidth: 1,\n          backgroundColor:\n            Highcharts.defaultOptions.legend.backgroundColor || \"#FFFFFF\",\n          shadow: true,\n        },\n        credits: {\n          enabled: false,\n        },\n        series: [\n          {\n            name: \"Perolehan\",\n            data: [107, 31, 635, 203, 2],\n            color: \"#4BB543\",\n            showInLegend: false,\n          },\n        ],\n      },\n      positiveChartColors: {\n        backgroundColor: \"#20bf0b\",\n      },\n      chartOptions: {\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: false,\n              },\n              gridLines: {\n                display: true,\n              },\n            },\n          ],\n          xAxes: [\n            {\n              ticks: {\n                beginAtZero: false,\n              },\n              gridLines: {\n                display: false,\n              },\n            },\n          ],\n        },\n        responsive: true,\n        maintainAspectRatio: true,\n      },\n    };\n  },\n  methods: {\n    checkEndTime() {\n      const end = new Date(\n        this.year,\n        this.month - 1,\n        this.date,\n        this.hour,\n        this.minute\n      );\n\n      const now = new Date();\n\n      const distance = end.getTime() - now.getTime();\n      if (distance < 0) {\n        this.timeUp = true;\n      }\n      console.log(this.timeUp);\n    },\n    formatter() {\n      const format = this.announcement.split(\"-\");\n      this.year = parseInt(format[0]);\n      this.month = parseInt(format[1]);\n      const time = format[2].split(\"T\");\n      this.date = parseInt(time[0]);\n      const clock = time[1].split(\":\");\n      this.hour = parseInt(clock[0]);\n      this.minute = parseInt(clock[1]);\n    },\n    findCandidateById(id) {\n      var i = 0;\n      for (i = 0; i < this.candidates.length; i++) {\n        if (this.candidates[i]._id == id) return i;\n      }\n    },\n    count() {\n      setInterval(() => {\n        var now = new Date();\n\n        var endCount = new Date(this.announcement);\n\n        endCount = new Date(\n          endCount.getTime() + now.getTimezoneOffset() * 60 * 1000\n        );\n        now = new Date(\n          now.getTime() + (now.getTimezoneOffset() + 420) * 60 * 1000\n        );\n\n        var maxCount = (now - endCount) / 1000;\n        maxCount = Math.ceil(maxCount);\n\n        if (maxCount > 0) this.timeUp = true;\n\n        if (maxCount > this.participants.length)\n          maxCount = this.participants.length;\n\n        var total = [];\n        this.candidates.forEach((candidate) =>\n          total.push({\n            name: candidate.name,\n            total: 0,\n          })\n        );\n\n        var n = 0;\n\n        for (n = 0; n < maxCount; n++) {\n          if (this.participants[n].voting) {\n            const index = this.findCandidateById(\n              this.participants[n].voting.id_candidate\n            );\n            total[index].total++;\n          }\n        }\n\n        this.arrCandidate = total;\n\n        var name = [];\n        var vote = [];\n\n        total.forEach((count) => {\n          name.push(count.name);\n          vote.push(count.total);\n        });\n\n        this.barOptions.xAxis.categories = name;\n        this.barOptions.series[0].data = vote;\n        this.barOptions.yAxis.title.text =\n          maxCount + \"/\" + this.participants.length + \" suara\";\n      }, 1000);\n    },\n  },\n  mounted() {\n    axios\n      .get(\"http://52.152.228.107:3000/api/v1/announcement\")\n      .then((res) => {\n        this.announcement = res.data.data;\n        this.formatter();\n        this.checkEndTime();\n      })\n      .catch((err) => console.log(err));\n    axios\n      .get(\"http://52.152.228.107:3000/api/v1/participant/all\")\n      .then((res) => {\n        this.participants = res.data.data;\n        this.count();\n      })\n      .catch((err) => console.log(err));\n    axios\n      .get(\"http://52.152.228.107:3000/api/v1/candidate/all\")\n      .then((res) => {\n        this.candidates = res.data.data;\n      })\n      .catch((err) => console.log(err));\n  },\n};\n</script>\n<style>\n.countdown {\n  margin-top: 8%;\n}\n.highcharts-figure,\n.highcharts-data-table table {\n  min-width: 310px;\n  max-width: 800px;\n  margin: 1em auto;\n}\n\n#container {\n  height: 400px;\n}\n\n.highcharts-data-table table {\n  font-family: Verdana, sans-serif;\n  border-collapse: collapse;\n  border: 1px solid #ebebeb;\n  margin: 10px auto;\n  text-align: center;\n  width: 100%;\n  max-width: 500px;\n}\n.highcharts-data-table caption {\n  padding: 1em 0;\n  font-size: 1.2em;\n  color: #555;\n}\n.highcharts-data-table th {\n  font-weight: 600;\n  padding: 0.5em;\n}\n.highcharts-data-table td,\n.highcharts-data-table th,\n.highcharts-data-table caption {\n  padding: 0.5em;\n}\n.highcharts-data-table thead tr,\n.highcharts-data-table tr:nth-child(even) {\n  background: #f8f8f8;\n}\n.highcharts-data-table tr:hover {\n  background: #f1f7ff;\n}\n</style>\n"],"sourceRoot":"src/views/vote"}]}