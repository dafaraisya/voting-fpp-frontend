{"remainingRequest":"/home/dafa/voting-fpp-frontend/node_modules/babel-loader/lib/index.js!/home/dafa/voting-fpp-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dafa/voting-fpp-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dafa/voting-fpp-frontend/src/views/admin/session/ListSession.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dafa/voting-fpp-frontend/src/views/admin/session/ListSession.vue","mtime":1609126007767},{"path":"/home/dafa/voting-fpp-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dafa/voting-fpp-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dafa/voting-fpp-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dafa/voting-fpp-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJMaXN0U2Vzc2lvbiIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlc3Npb25zOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERhdGVUaW1lOiBmdW5jdGlvbiBnZXREYXRlVGltZShkYXRlKSB7CiAgICAgIHZhciB0b2RheSA9IG5ldyBEYXRlKCk7CiAgICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlLmdldFRpbWUoKSArIHRvZGF5LmdldFRpbWV6b25lT2Zmc2V0KCkgKiA2MCAqIDEwMDApOwogICAgICB2YXIgdGFodW4gPSBkYXRlLmdldEZ1bGxZZWFyKCk7CiAgICAgIHZhciBtb250aCA9IGRhdGUuZ2V0TW9udGgoKTsKICAgICAgdmFyIHRhbmdnYWwgPSBkYXRlLmdldERhdGUoKTsKICAgICAgdmFyIGRheSA9IGRhdGUuZ2V0RGF5KCk7CiAgICAgIHZhciBob3VyID0gZGF0ZS5nZXRIb3VycygpOwogICAgICB2YXIgbWludXRlID0gZGF0ZS5nZXRNaW51dGVzKCk7CgogICAgICBzd2l0Y2ggKGRheSkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIGRheSA9ICJNaW5nZ3UiOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgMToKICAgICAgICAgIGRheSA9ICJTZW5pbiI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAyOgogICAgICAgICAgZGF5ID0gIlNlbGFzYSI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAzOgogICAgICAgICAgZGF5ID0gIlJhYnUiOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgNDoKICAgICAgICAgIGRheSA9ICJLYW1pcyI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSA1OgogICAgICAgICAgZGF5ID0gIkp1bSdhdCI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSA2OgogICAgICAgICAgZGF5ID0gIlNhYnR1IjsKICAgICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICBzd2l0Y2ggKG1vbnRoKSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgbW9udGggPSAiSmFudWFyaSI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAxOgogICAgICAgICAgbW9udGggPSAiRmVicnVhcmkiOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgMjoKICAgICAgICAgIG1vbnRoID0gIk1hcmV0IjsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDM6CiAgICAgICAgICBtb250aCA9ICJBcHJpbCI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSA0OgogICAgICAgICAgbW9udGggPSAiTWVpIjsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDU6CiAgICAgICAgICBtb250aCA9ICJKdW5pIjsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDY6CiAgICAgICAgICBtb250aCA9ICJKdWxpIjsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDc6CiAgICAgICAgICBtb250aCA9ICJBZ3VzdHVzIjsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDg6CiAgICAgICAgICBtb250aCA9ICJTZXB0ZW1iZXIiOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgOToKICAgICAgICAgIG1vbnRoID0gIk9rdG9iZXIiOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBtb250aCA9ICJOb3ZlbWJlciI7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAxMToKICAgICAgICAgIG1vbnRoID0gIkRlc2VtYmVyIjsKICAgICAgICAgIGJyZWFrOwogICAgICB9CgogICAgICBpZiAoaG91ciA8IDEwKSBob3VyID0gIjAiICsgaG91cjsKICAgICAgaWYgKG1pbnV0ZSA8IDEwKSBtaW51dGUgPSAiMCIgKyBtaW51dGU7CiAgICAgIHZhciBkYXRldGltZSA9IGhvdXIgKyAiOiIgKyBtaW51dGUgKyAiLCAiICsgZGF5ICsgIiwgIiArIHRhbmdnYWwgKyAiICIgKyBtb250aCArICIgIiArIHRhaHVuOwogICAgICByZXR1cm4gZGF0ZXRpbWU7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBheGlvcy5nZXQoImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvdjEvc2Vzc2lvbi9hbGwiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgcmV0dXJuIF90aGlzLnNlc3Npb25zID0gcmVzLmRhdGEuZGF0YTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyb3IpOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["ListSession.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container text-left\">\n    <router-link :to=\"{ name: 'CreateSession' }\">\n      <b-button variant=\"primary\" class=\"mb-2\">\n        <i class=\"far fa-plus-square text-white\"></i>\n        Buat sesi\n      </b-button>\n    </router-link>\n    <div\n      class=\"bg-white mb-3 p-3 rounded-sm shadow\"\n      v-for=\"session in sessions\"\n      :key=\"session._id\"\n    >\n      <div>\n        <b style=\"font-size:26px;\">Sesi {{ session.number }}</b\n        ><br />\n        <i class=\"far fa-clock\"></i>\n        {{ getDateTime(new Date(session.start)) }} -\n        {{ getDateTime(new Date(session.end)) }}\n      </div>\n      <div>\n        <i class=\"fas fa-user\"></i> {{ session.total_participant }} peserta\n      </div>\n      <div class=\"mt-3\">\n        <router-link\n          :to=\"{ name: 'DetailSession', params: { id: session._id } }\"\n        >\n          <b-button href=\"\" variant=\"primary\">\n            <i class=\"fas fa-info-circle text-white\"></i>\n            Detail\n          </b-button>\n        </router-link>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"ListSession\",\n  data() {\n    return {\n      sessions: [],\n    };\n  },\n  methods: {\n    getDateTime(date) {\n      var today = new Date();\n      date = new Date(date.getTime() + today.getTimezoneOffset() * 60 * 1000);\n\n      var tahun = date.getFullYear();\n      var month = date.getMonth();\n      var tanggal = date.getDate();\n      var day = date.getDay();\n      var hour = date.getHours();\n      var minute = date.getMinutes();\n\n      switch (day) {\n        case 0:\n          day = \"Minggu\";\n          break;\n        case 1:\n          day = \"Senin\";\n          break;\n        case 2:\n          day = \"Selasa\";\n          break;\n        case 3:\n          day = \"Rabu\";\n          break;\n        case 4:\n          day = \"Kamis\";\n          break;\n        case 5:\n          day = \"Jum'at\";\n          break;\n        case 6:\n          day = \"Sabtu\";\n          break;\n      }\n      switch (month) {\n        case 0:\n          month = \"Januari\";\n          break;\n        case 1:\n          month = \"Februari\";\n          break;\n        case 2:\n          month = \"Maret\";\n          break;\n        case 3:\n          month = \"April\";\n          break;\n        case 4:\n          month = \"Mei\";\n          break;\n        case 5:\n          month = \"Juni\";\n          break;\n        case 6:\n          month = \"Juli\";\n          break;\n        case 7:\n          month = \"Agustus\";\n          break;\n        case 8:\n          month = \"September\";\n          break;\n        case 9:\n          month = \"Oktober\";\n          break;\n        case 10:\n          month = \"November\";\n          break;\n        case 11:\n          month = \"Desember\";\n          break;\n      }\n\n      if (hour < 10) hour = \"0\" + hour;\n\n      if (minute < 10) minute = \"0\" + minute;\n\n      var datetime =\n        hour +\n        \":\" +\n        minute +\n        \", \" +\n        day +\n        \", \" +\n        tanggal +\n        \" \" +\n        month +\n        \" \" +\n        tahun;\n\n      return datetime;\n    },\n  },\n  mounted() {\n    axios\n      .get(\"http://localhost:3000/api/v1/session/all\")\n      .then((res) => (this.sessions = res.data.data))\n      .catch((error) => console.log(error));\n  },\n};\n</script>\n"],"sourceRoot":"src/views/admin/session"}]}